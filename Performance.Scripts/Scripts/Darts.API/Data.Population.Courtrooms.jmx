<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Blazemeter test plan" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SCRIPT_NAME" elementType="Argument">
            <stringProp name="Argument.name">SCRIPT_NAME</stringProp>
            <stringProp name="Argument.value">${__P(SCRIPT_NAME, API-CreateTranscriptions-Post)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">${__GetSecret(BASE_URL)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_LOGIN" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_LOGIN</stringProp>
            <stringProp name="Argument.value">${__GetSecret(BASE_URL_LOGIN)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_TOKEN</stringProp>
            <stringProp name="Argument.value">${__GetSecret(BASE_URL_TOKEN)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_DATA" elementType="Argument">
            <stringProp name="Argument.name">TEST_DATA</stringProp>
            <stringProp name="Argument.value">${__GetSecret(TEST_DATA)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_COUNT" elementType="Argument">
            <stringProp name="Argument.name">USER_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(USER_COUNT, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_RAMP_TIME" elementType="Argument">
            <stringProp name="Argument.name">USER_RAMP_TIME</stringProp>
            <stringProp name="Argument.value">${__P(USER_RAMP_TIME, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_ITERATIONS" elementType="Argument">
            <stringProp name="Argument.name">USER_ITERATIONS</stringProp>
            <stringProp name="Argument.value">${__P(USER_ITERATIONS, 2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TENANT_ID" elementType="Argument">
            <stringProp name="Argument.name">TENANT_ID</stringProp>
            <stringProp name="Argument.value">${__GetSecret(TENANT_ID)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CLIENT_ID" elementType="Argument">
            <stringProp name="Argument.name">CLIENT_ID</stringProp>
            <stringProp name="Argument.value">${__GetSecret(CLIENT_ID)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CLIENT_SECRET" elementType="Argument">
            <stringProp name="Argument.name">CLIENT_SECRET</stringProp>
            <stringProp name="Argument.value">${__GetSecret(CLIENT_SECRET)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SCOPE" elementType="Argument">
            <stringProp name="Argument.name">SCOPE</stringProp>
            <stringProp name="Argument.value">${__GetSecret(SCOPE)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERNAME" elementType="Argument">
            <stringProp name="Argument.name">USERNAME</stringProp>
            <stringProp name="Argument.value">${__P(USERNAME, darts_global_test_user)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERNAME2" elementType="Argument">
            <stringProp name="Argument.name">USERNAME2</stringProp>
            <stringProp name="Argument.value">${__P(USERNAME2, darts.transcriber@hmcts.net)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USERNAME3" elementType="Argument">
            <stringProp name="Argument.name">USERNAME3</stringProp>
            <stringProp name="Argument.value">${__P(USERNAME3, PerfTranscirber01)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PASSWORD3" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD3</stringProp>
            <stringProp name="Argument.value">${__P(PASSWORD3, PerfTester@01)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD</stringProp>
            <stringProp name="Argument.value">${__GetSecret(PASSWORD)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="GRANT_TYPE" elementType="Argument">
            <stringProp name="Argument.name">GRANT_TYPE</stringProp>
            <stringProp name="Argument.value">${__GetSecret(GRANT_TYPE)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_TO_UPLOAD1mb" elementType="Argument">
            <stringProp name="Argument.name">FILE_TO_UPLOAD1mb</stringProp>
            <stringProp name="Argument.value">${__P(FILE_TO_UPLOAD, sample.mp2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_TO_UPLOAD28mb" elementType="Argument">
            <stringProp name="Argument.name">FILE_TO_UPLOAD28mb</stringProp>
            <stringProp name="Argument.value">${__P(FILE_TO_UPLOAD, 02h.mp2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_TO_UPLOAD168mb" elementType="Argument">
            <stringProp name="Argument.name">FILE_TO_UPLOAD168mb</stringProp>
            <stringProp name="Argument.value">${__P(FILE_TO_UPLOAD, 12h.mp2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_TO_UPLOAD213mb" elementType="Argument">
            <stringProp name="Argument.name">FILE_TO_UPLOAD213mb</stringProp>
            <stringProp name="Argument.value">${__P(FILE_TO_UPLOAD, 15h 15m.mp2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_TO_UPLOAD336mb" elementType="Argument">
            <stringProp name="Argument.name">FILE_TO_UPLOAD336mb</stringProp>
            <stringProp name="Argument.value">${__P(FILE_TO_UPLOAD, 24h.mp2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="project" elementType="Argument">
            <stringProp name="Argument.name">project</stringProp>
            <stringProp name="Argument.value">_PROJECT_</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="suite" elementType="Argument">
            <stringProp name="Argument.name">suite</stringProp>
            <stringProp name="Argument.value">_SUITE_</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="build" elementType="Argument">
            <stringProp name="Argument.name">build</stringProp>
            <stringProp name="Argument.value">_BUILDNUMBER_</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="agent" elementType="Argument">
            <stringProp name="Argument.name">agent</stringProp>
            <stringProp name="Argument.value">${__machineIP()}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="false">
        <collectionProp name="prometheus.collector_definitions">
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rt_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rt_as_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the total number of samplers</stringProp>
            <stringProp name="collector.metric_name">jsr223_count_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">CountTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the total number of successful samplers</stringProp>
            <stringProp name="collector.metric_name">jsr223_success_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response size for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rsize_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">success ratio of the can_fail_sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_can_fail</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the latency (ttfb) for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_latency_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">Latency</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the idle time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_idle_time</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">IdleTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jsr223_assertions</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
            <stringProp name="listener.collector.listen_to">assertions</stringProp>
          </elementProp>
        </collectionProp>
      </com.github.johrstrom.listener.PrometheusListener>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV - Users" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${TEST_DATA}users_${__machineIP}.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="variableNames"></stringProp>
        <stringProp name="TestPlan.comments">${TEST_DATA}users_${__machineIP}.csv</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV - CourtRoomAndCourtHouses.csv" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${TEST_DATA}CourtHouseId.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="variableNames"></stringProp>
        <stringProp name="TestPlan.comments">${TEST_DATA}users_${__machineIP}.csv</stringProp>
      </CSVDataSet>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.proxyHost">127.0.0.1</stringProp>
        <stringProp name="HTTPSampler.proxyPort">8888</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG - ${SCRIPT_NAME}" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${USER_ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USER_COUNT}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${USER_RAMP_TIME}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery"></stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="connectionProperties"></stringProp>
          <stringProp name="dataSource">dbConfig</stringProp>
          <stringProp name="dbUrl">jdbc:postgresql://darts-api-stg.postgres.database.azure.com:5432/darts</stringProp>
          <stringProp name="driver">org.postgresql.Driver</stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">PQuEyVaUAxqu0UeNUo8(</stringProp>
          <stringProp name="poolMax">1</stringProp>
          <boolProp name="preinit">false</boolProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">pgadmin</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="94232475">v_randomEventText</stringProp>
            <stringProp name="-1564979469">v_randomFileName</stringProp>
            <stringProp name="-342927303">v_randomTranscriptionComment</stringProp>
            <stringProp name="1000984567">v_randomString4</stringProp>
            <stringProp name="169510212">v_dateTime</stringProp>
            <stringProp name="94049529">v_randomEventName</stringProp>
            <stringProp name="1506241289">v_randomEventId</stringProp>
            <stringProp name="-808133977">v_randomCaseName</stringProp>
            <stringProp name="-181499217">v_randomDefender</stringProp>
            <stringProp name="-1602782773">v_randomJudge</stringProp>
            <stringProp name="-624884974">v_randomProsecutor</stringProp>
            <stringProp name="-1331508381">v_randomDefender2</stringProp>
            <stringProp name="1791439238">v_randomNumberForEvent</stringProp>
            <stringProp name="-628525754">audioCounter</stringProp>
            <stringProp name="1921384329">v_randomNumberRetention</stringProp>
            <stringProp name="-1471382400">v_randomNumberEventId</stringProp>
            <stringProp name="-2035168919">ex_accessToken</stringProp>
            <stringProp name="-1241140545">ex_accessTokenTrans</stringProp>
            <stringProp name="1529980314">v_randomCourtroom</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="1674715430">
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-1161236289">${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-1161236289">${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-1161236289">${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-1326369593">${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss.SSS&apos;Z&apos;,)}</stringProp>
              <stringProp name="487930620">${__Random(1001,1007,)}</stringProp>
              <stringProp name="1642584799">${__Random(1,1070,)}</stringProp>
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
              <stringProp name="1512311384">${__Random(1,10,)}</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="-1198056235">${__Random(1,4,)}</stringProp>
              <stringProp name="1636120152">${__Random(1,1000,)}</stringProp>
              <stringProp name="-1922340740">eyJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsiLCJ0eXAiOiJKV1QifQ.eyJpZHAiOiJMb2NhbEFjY291bnQiLCJvaWQiOiI5Nzk3YTRmYy04ZTYyLTQwOTUtYmRhNi0wNGU3NzQ3YjA1ZTUiLCJzdWIiOiI5Nzk3YTRmYy04ZTYyLTQwOTUtYmRhNi0wNGU3NzQ3YjA1ZTUiLCJnaXZlbl9uYW1lIjoiRGFydHMgR2xvYmFsIiwiZmFtaWx5X25hbWUiOiJUZXN0IFVzZXIiLCJ0ZnAiOiJCMkNfMV9yb3BjX2RhcnRzX3NpZ25pbiIsInNjcCI6IkZ1bmN0aW9uYWwuVGVzdCIsImF6cCI6Ijg1MTE4ZWUyLTY1NDQtNDE4MC1hMTZlLTk5NjE1MzY1ZjIwOSIsInZlciI6IjEuMCIsImlhdCI6MTcwNzQ5NjIyMSwiYXVkIjoiODUxMThlZTItNjU0NC00MTgwLWExNmUtOTk2MTUzNjVmMjA5IiwiZXhwIjoxNzA3NDk5ODIxLCJpc3MiOiJodHRwczovL2htY3Rzc3RnZXh0aWQuYjJjbG9naW4uY29tLzhiMTg1ZjhiLTY2NWQtNGJiMy1hZjRhLWFiN2VlNjFiOTMzNC92Mi4wLyIsIm5iZiI6MTcwNzQ5NjIyMX0.TQN701aY18yjL2RPCC3EvpIFnb6XDoD2TCsk1ci6hQy0ulhk3pxil0DJXKn0InTr5-x4-l_ckINJxeatR47YVVAFe4D_Xsv_Qrq2hkgSP6ZuhkH1qaFMx6mOatgi9idWybpH3yZbb1ao7R9A8kTCp2crLKNHmaCPFqeoduWYm7zF1LSuow1iZVS2-SGmoWxY0ujKn1E6uio0rioMB_ZPtipTYIL2udpU594vClYR8zgs3WOECKWGlfMpch1fvT5Ba0pveDrfQP2Sv_WfX0VGlbeh-juTdnVvZuNt6Ia1AXKxoZ3zwuxeFI-s9fEbIIx-BX2aDv1AB_ohFSaWBg7XGQ</stringProp>
              <stringProp name="1719767436">eyJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsiLCJ0eXAiOiJKV1QifQ.eyJpZHAiOiJMb2NhbEFjY291bnQiLCJvaWQiOiI4ZmIwMDRmMy00NzRiLTQ4MzItYjk1YS03YzRiNjhjZTJjNmQiLCJzdWIiOiI4ZmIwMDRmMy00NzRiLTQ4MzItYjk1YS03YzRiNjhjZTJjNmQiLCJnaXZlbl9uYW1lIjoiRGFydHMiLCJmYW1pbHlfbmFtZSI6IlRyYW5zY3JpYmVyIiwiZW1haWxzIjpbImRhcnRzLnRyYW5zY3JpYmVyQGhtY3RzLm5ldCJdLCJ0ZnAiOiJCMkNfMV9yb3BjX2RhcnRzX3NpZ25pbiIsInNjcCI6IkZ1bmN0aW9uYWwuVGVzdCIsImF6cCI6Ijg1MTE4ZWUyLTY1NDQtNDE4MC1hMTZlLTk5NjE1MzY1ZjIwOSIsInZlciI6IjEuMCIsImlhdCI6MTcwNzQ5NjIyMSwiYXVkIjoiODUxMThlZTItNjU0NC00MTgwLWExNmUtOTk2MTUzNjVmMjA5IiwiZXhwIjoxNzA3NDk5ODIxLCJpc3MiOiJodHRwczovL2htY3Rzc3RnZXh0aWQuYjJjbG9naW4uY29tLzhiMTg1ZjhiLTY2NWQtNGJiMy1hZjRhLWFiN2VlNjFiOTMzNC92Mi4wLyIsIm5iZiI6MTcwNzQ5NjIyMX0.e2dvgmPJzWvIsNVD_iwSfmoPQ3SMJariP3LNTdAAD2oPmELsfNqwDsGE1RETROuhoHACk_duzpdA2AYpVr8AK0Hz2cIsPMc4WCbGxQ3PndXLu6OwmrkCPlxQdPOX3AL1xLyf3-neKWJmSlKmhCG6qCbjiHrYFykCMxawQWllJvboq0rBwUgd7QB7WQDLGJDh79oQdRUpATr3V-O8t6QslLFdCdVoy6ZaDPAW8aVrWEFniAKPDaBnZYi5_7-Vo6BqRMKQ9mToUB-NiToy6c8QgjG6Fou_PMMVW1i0qNYfAzHIy6ysEZeIW88nOX6cwJ1xCXySvswwaTSrbO1k9LlLmw</stringProp>
              <stringProp name="-917173624">${__RandomString(15,abcdefghijklmnopqrstuvwxyz,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1579351719">v_randomdates</stringProp>
            <stringProp name="1787714242">v_randomNumberForAudio</stringProp>
            <stringProp name="-804253826">v_randomNumberForTranscription</stringProp>
            <stringProp name="-1471382400">v_randomNumberEventId</stringProp>
            <stringProp name="947813807">RandomIndex</stringProp>
            <stringProp name="1356807715">MinimumValue</stringProp>
            <stringProp name="1584027352">MaximumValue	</stringProp>
            <stringProp name="-396077">RandomCourtHouseId</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="626616313">
              <stringProp name="1723739275">${__groovy(new Date((long)(Math.random() * System.currentTimeMillis())).format(&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS&apos;Z&apos;&quot;),)}</stringProp>
              <stringProp name="-1198056235">${__Random(1,4,)}</stringProp>
              <stringProp name="1512311384">${__Random(1,10,)}</stringProp>
              <stringProp name="1636120152">${__Random(1,1000,)}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="48780">150</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import org.apache.commons.io.FileUtils;
import java.io.File;
import java.io.IOException;
import java.util.Random;

try {
    // Load CSV file into a string
    String csvContent = FileUtils.readFileToString(new File(&quot;C:\\Users\\a.cooper\\Desktop\\Performance.Testing\\DARTS\\Performance.Scripts\\Data\\CourtHouseId.csv&quot;));

    // Split CSV content by lines
    String[] lines = csvContent.split(&quot;\\r?\\n&quot;);

    // Generate a random index within the range of lines
    int randomIndex = new Random().nextInt(lines.length);

    // Get the CourtHouseId at the random index
    String randomLine = lines[randomIndex];
    String randomCourtHouseId = randomLine.split(&quot;,&quot;)[0]; // Assuming CourtHouseId is the first column

    // Set the variable for use in subsequent requests
    vars.put(&quot;RandomCourtHouseId&quot;, randomCourtHouseId);
} catch (IOException e) {
    log.error(&quot;Error reading CSV file: &quot; + e.getMessage());
}
</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop - Create Random Amount of Events for Hearings" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
          <stringProp name="TestPlan.comments">${v_randomNumberForEvent}</stringProp>
        </LoopController>
        <hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">CourtroomCounter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request For Courtroom creation" enabled="true">
            <stringProp name="dataSource">dbConfig</stringProp>
            <stringProp name="query">INSERT INTO darts.courtroom (ctr_id, cth_id, courtroom_name) 
VALUES (nextval(&apos;darts.ctr_seq&apos;), ${RandomCourtHouseId}, &apos;PerfCourtroom_${v_randomCourtroom}&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as Object</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable">ex_allHearingsIds</stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract Hearings Ids" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ex_hearingsIds</stringProp>
              <stringProp name="RegexExtractor.regex">hea_id=(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">-1</stringProp>
              <stringProp name="Scope.variable">ex_allHearingsIds</stringProp>
              <stringProp name="Sample.scope">variable</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
