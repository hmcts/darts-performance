plugins {
    id 'java'
    id 'uk.gov.hmcts.java' version '0.12.63'
    id 'io.gatling.gradle' version '3.11.5.2'
}

group = 'uk.gov.hmcts'
version = '0.0.1'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencies {
    gatling group: 'org.postgresql', name: 'postgresql', version: '42.7.4'
    gatling 'com.github.hmcts:juror-generation-support-library:1.5.4'
}

// Default gatlingRun configuration
gatlingRun {
    jvmArgs = ['-Xms4G', '-Xmx8G']
    simulationClassName = System.getenv("SimulationBlock")
    doFirst {
        println "Running simulation: " + simulationClassName
        def soapUsersCount = System.getenv("SOAP_USERS_COUNT") ?: '1'
        println "Users count: " + soapUsersCount
        System.setProperty("SOAP_USERS_COUNT", soapUsersCount)

        def nightlyRunRepeats = System.getenv("NIGHTLY_RUN_REPEATS") ?: '10'
        println "Number of repeats: " + nightlyRunRepeats
        System.setProperty("NIGHTLY_RUN_REPEATS", nightlyRunRepeats)

        def nightlyRunUsers = System.getenv("NIGHTLY_RUN_USERS") ?: '10'
        println "Users count: " + nightlyRunUsers
        System.setProperty("NIGHTLY_RUN_USERS", nightlyRunUsers)
    }
}

// Run Command = & .\gradlew.bat runCaseRetentionForChildObjectsSimulation

// Function to register a task for a simulation
def registerSimulationTask(taskName, simulationClassName) {
    tasks.register(taskName) {
        doLast {
            println "Running simulation: ${simulationClassName}"
        }
        // Set the simulation class and make this task depend on gatlingRun
        finalizedBy(gatlingRun)
        gatlingRun.simulationClassName = simulationClassName
    }
}

// List of simulations with their task names and simulation class names
def simulations = [

    //Main Smoke Tests
    [task: 'runPortalSmokeTestOneSimulation', class: 'simulations.Scripts.PerformanceTests.DartsSmokeTests.PortalSmokeTestOneSimulation'],
    [task: 'runPortalSmokeTestTwoSimulation', class: ' simulations.Scripts.PerformanceTests.DartsSmokeTests.PortalSmokeTestTwoSimulation'],
    [task: 'runSoapSmokeTestOneSimulation', class: 'simulations.Scripts.DartsSmokeTests.SoapSmokeTestOneSimulation'],
    [task: 'runSoapSmokeTestTwoSimulation', class: 'simulations.Scripts.DartsSmokeTests.SoapSmokeTestTwoSimulation'],
    
    //Get Token for API
    [task: 'runGETTokenSimulation', class: 'simulations.Scripts.DartsApi.GETTokenSimulation'],


    //Advance Search Check Test
    [task: 'runPortalAdvanceSearchSimulation', class: 'simulations.Scripts.PerformanceTests.DartsSmokeTests.PortalAdvanceSearchSimulation'],

    //Main BaseLine Normal Tests
    [task: 'runDartsBaseLineNormalTests', class: 'simulations.Scripts.DartsBaseLineNormalTests'],
    [task: 'runSoapBaseLineNormalTestSimulation', class: 'simulations.Scripts.SoapBaseLineNormalTestSimulation'],

    //Main BaseLine Peak Tests
    [task: 'runDartsBaseLinePeakTests', class: 'simulations.Scripts.PerformanceTests.DartsBaseLinePeakTests.PortalBaslinePeakTestSimulation'],
    [task: 'runSoapBaseLinePeakTestSimulation', class: 'simulations.Scripts.PerformanceTests.DartsBaseLinePeakTests.SoapBaseLinePeakTestSimulation'],
    
    //Portal Login Checks 
    [task: 'runPortalLoginTestSimulation', class: 'simulations.Scripts.PerformanceTests.DartsPortalLoginTest.PortalLoginTestSimulation'],


    //New Main Soap Tests
    [task: 'runSoapTestSimulation', class: 'simulations.Scripts.PerformanceTests.NewMainTests.SoapTestSimulation'],
    [task: 'runPortalTestSimulation', class: 'simulations.Scripts.PerformanceTests.NewMainTests.PortalTestSimulation'],
    [task: 'runPortalTestSimulation2', class: 'simulations.Scripts.PerformanceTests.NewMainTests.PortalTestSimulation2'],
    
    //E2E Performanec Tests
    [task: 'runPeakTestWithTasksSimulation', class: 'simulations.Scripts.PerformanceTests.PeakTestWithTasksTest.PeakTestWithTasksSimulation'],



    //NightlyRun
    [task: 'runNightlyRunSimulation', class: 'simulations.Scripts.NightlyRun.NightlyRunSimulation'],

    //Create Data for scripts / automated tasks
    [task: 'runCloseCaseSimulation', class: 'simulations.Scripts.DartsApi.CreateData.CloseCaseSimulation'],
    [task: 'runGetEventUpdateInterpereterUsed', class: 'simulations.Scripts.DartsApi.CreateData.GetEventUpdateInterpereterUsed'],    
    [task: 'runCaseRetentionForChildObjectsSimulation', class: 'simulations.Scripts.DartsApi.CaseRetentionForChildObjectsSimulation'],
    [task: 'runDailyListsSimulation', class: 'simulations.Scripts.DartsSoap.DailyListsSimulation'],
    [task: 'runCaseRetentionSimulation', class: 'simulations.Scripts.DartsApi.CreateData.CaseRetentionSimulation'],
    [task: 'runCloseOldUnfinishedTranscriptionsSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunCloseOldUnfinishedTranscriptionsSimulation'],
    [task: 'runGenerateCaseDocumentSimulation', class: 'simulations.Scripts.DartsApi.RunGenerateCaseDocumentSimulation'],
    [task: 'runGenerateCaseDocumentForRetentionDateSimulation', class: 'simulations.Scripts.DartsApi.RunGenerateCaseDocumentForRetentionDateSimulation'],
    [task: 'runRemoveDuplicateEventsSimulation', class: 'simulations.Scripts.DartsApi.RunRemoveDuplicateEventsSimulation'],
    [task: 'runCaseExpiryDeletionSimulation', class: 'simulations.Scripts.DartsApi.RunCaseExpiryDeletionSimulation'],
    [task: 'runInboundToUnstructuredDataStoreSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunInboundToUnstructuredDataStoreSimulation'],
    [task: 'runAddAudioToHearingSimulation', class: 'simulations.Scripts.DartsApi.CreateData.AddAudioToHearingSimulation'],
    [task: 'runInterpreterUsedEventSimulation', class: 'simulations.Scripts.DartsApi.CreateData.InterpreterUsedEventSimulation'],


    //General Simulations
    [task: 'runAudioPostSimulation', class: 'simulations.Scripts.DartsApi.AudioPostSimulation'],
    [task: 'runAudioRequestDeleteSimulation', class: 'simulations.Scripts.DartsApi.AudioRequestDeleteSimulation'],
    [task: 'runAudioRequestGetSimulation', class: 'simulations.Scripts.DartsApi.AudioRequestGetSimulation'],
    [task: 'runAudioRequestPostSimulation', class: 'simulations.Scripts.DartsApi.AudioRequestPostSimulation'],
    [task: 'runAddDocumentsSimulation', class: 'simulations.Scripts.DartsSoap.AddDocumentsSimulation'],
    [task: 'runPostEventsSimulation', class: 'simulations.Scripts.DartsApi.PostEventsSimulation'],


    //Automated Tasks Simulations
    [task: 'runAutomatedTask11Simulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunAutomatedTask11Simulation'],
    [task: 'runCloseOldCasesTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunCloseOldCasesTaskSimulation'],
    [task: 'runApplyRetentionTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunApplyRetentionTaskSimulation'],
    [task: 'runUnstructuredAudioDeleterTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunUnstructuredAudioDeleterTaskSimulation'],
    [task: 'runDailyListTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunDailyListTaskSimulation'],
    [task: 'runDailyListHouseKeepingTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunDailyListHouseKeepingTaskSimulation'],
    [task: 'runInboundAudioDeleterTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunInboundAudioDeleterTaskSimulation'],
    [task: 'runExternalDataStoreDeleterTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunExternalDataStoreDeleterTaskSimulation'],
    [task: 'runOutboundAudioDeleterTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunOutboundAudioDeleterTaskSimulation'],
    [task: 'runUnstructuredToArmDataStoreSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunUnstructuredToArmDataStoreSimulation'],
    [task: 'runDetsToArmTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunDetsToArmTaskSimulation'],
    [task: 'runProcessDETSToArmResponseTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunProcessDETSToArmResponseTaskSimulation'],
    [task: 'runProcessArmResponseFilesTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunProcessArmResponseFilesTaskSimulation'],
    [task: 'runApplyRetentionCaseAssociatedObjectsTaskSimulation', class: 'simulations.Scripts.DartsApi.AutomatedTasks.RunApplyRetentionCaseAssociatedObjectsTaskSimulation']

]

// Register tasks dynamically
simulations.each { simulation ->
    registerSimulationTask(simulation.task, simulation.class)
}


checkstyleGatling {
    maxWarnings = 3035
}

tasks.register('runAllStyleChecks') {
    dependsOn 'checkstyleMain'
    dependsOn 'checkstyleTest'
    dependsOn 'checkstyleGatling'
}
