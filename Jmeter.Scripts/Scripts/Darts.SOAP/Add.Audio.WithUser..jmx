<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Blazemeter test plan" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SCRIPT_NAME" elementType="Argument">
            <stringProp name="Argument.name">SCRIPT_NAME</stringProp>
            <stringProp name="Argument.value">${__P(SCRIPT_NAME, API-CreateTranscriptions-Post)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">${__P(BASE_URL, darts.staging.apps.hmcts.net)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_LOGIN" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_LOGIN</stringProp>
            <stringProp name="Argument.value">${__GetSecret(BASE_URL_LOGIN)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_TOKEN</stringProp>
            <stringProp name="Argument.value">${__GetSecret(BASE_URL_TOKEN)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_DATA" elementType="Argument">
            <stringProp name="Argument.name">TEST_DATA</stringProp>
            <stringProp name="Argument.value">${__GetSecret(TEST_DATA)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_COUNT" elementType="Argument">
            <stringProp name="Argument.name">USER_COUNT</stringProp>
            <stringProp name="Argument.value">${__P(USER_COUNT, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_RAMP_TIME" elementType="Argument">
            <stringProp name="Argument.name">USER_RAMP_TIME</stringProp>
            <stringProp name="Argument.value">${__P(USER_RAMP_TIME, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_ITERATIONS" elementType="Argument">
            <stringProp name="Argument.name">USER_ITERATIONS</stringProp>
            <stringProp name="Argument.value">${__P(USER_ITERATIONS, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CLIENT_ID" elementType="Argument">
            <stringProp name="Argument.name">CLIENT_ID</stringProp>
            <stringProp name="Argument.value">${__GetSecret(AzureAdB2CClientId)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FILE_TO_UPLOAD" elementType="Argument">
            <stringProp name="Argument.name">FILE_TO_UPLOAD</stringProp>
            <stringProp name="Argument.value">${__P(FILE_TO_UPLOAD, sample.mp2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="project" elementType="Argument">
            <stringProp name="Argument.name">project</stringProp>
            <stringProp name="Argument.value">_PROJECT_</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="suite" elementType="Argument">
            <stringProp name="Argument.name">suite</stringProp>
            <stringProp name="Argument.value">_SUITE_</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="build" elementType="Argument">
            <stringProp name="Argument.name">build</stringProp>
            <stringProp name="Argument.value">_BUILDNUMBER_</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="agent" elementType="Argument">
            <stringProp name="Argument.name">agent</stringProp>
            <stringProp name="Argument.value">${__machineIP()}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="false">
        <collectionProp name="prometheus.collector_definitions">
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rt_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rt_as_summary</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
              <stringProp name="3059181">code</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the total number of samplers</stringProp>
            <stringProp name="collector.metric_name">jsr223_count_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">CountTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the total number of successful samplers</stringProp>
            <stringProp name="collector.metric_name">jsr223_success_total</stringProp>
            <stringProp name="collector.type">COUNTER</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the response size for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_rsize_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">success ratio of the can_fail_sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_can_fail</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the latency (ttfb) for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_latency_as_hist</stringProp>
            <stringProp name="collector.type">HISTOGRAM</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            <stringProp name="listener.collector.measuring">Latency</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">the idle time for a jsr223 sampler</stringProp>
            <stringProp name="collector.metric_name">jsr223_idle_time</stringProp>
            <stringProp name="collector.type">SUMMARY</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
            <stringProp name="listener.collector.measuring">IdleTime</stringProp>
          </elementProp>
          <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
            <stringProp name="collector.help">default help string</stringProp>
            <stringProp name="collector.metric_name">jsr223_assertions</stringProp>
            <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
            <collectionProp name="collector.labels">
              <stringProp name="-309310695">project</stringProp>
              <stringProp name="109795064">suite</stringProp>
              <stringProp name="94094958">build</stringProp>
              <stringProp name="92750597">agent</stringProp>
              <stringProp name="102727412">label</stringProp>
            </collectionProp>
            <stringProp name="collector.quantiles_or_buckets"></stringProp>
            <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
            <stringProp name="listener.collector.listen_to">assertions</stringProp>
          </elementProp>
        </collectionProp>
      </com.github.johrstrom.listener.PrometheusListener>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV - Users" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${TEST_DATA}Users.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="variableNames"></stringProp>
        <stringProp name="TestPlan.comments">${TEST_DATA}users_${__machineIP}.csv</stringProp>
      </CSVDataSet>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.proxyHost">127.0.0.1</stringProp>
        <stringProp name="HTTPSampler.proxyPort">8888</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG - ${SCRIPT_NAME}" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${USER_ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${USER_COUNT}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${USER_RAMP_TIME}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Date Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-910588249">v_startDate</stringProp>
            <stringProp name="-2075731872">v_endDate</stringProp>
            <stringProp name="2110499805">v_randomString</stringProp>
            <stringProp name="-825433146">v_tick</stringProp>
            <stringProp name="-461825005">v_randomComment</stringProp>
            <stringProp name="556416467">v_boundary</stringProp>
            <stringProp name="104354267">myVar</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-113999074">
              <stringProp name="-1788839298">${__timeShift(dd/MM/yyyy,,,,)}</stringProp>
              <stringProp name="-1429437465">${__timeShift(dd/MM/yyyy,,P7D,,)}</stringProp>
              <stringProp name="-1638586559">${__RandomString(5,abcdefghijklmnopqrstuvwxyz,)} </stringProp>
              <stringProp name="2074225080">${__RandomString(13,123456789,)}</stringProp>
              <stringProp name="-1201993923">${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)} </stringProp>
              <stringProp name="1230490064">----=_Part_${__RandomString(2, 0123456789)}_${__time(,)}_${__RandomString(13,abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789)}</stringProp>
              <stringProp name="1498789909">Hello, World!</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">binaryString</stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils

// Path to your audio file
String filePath = &quot;C:/Users/a.cooper/Desktop/Performance.Testing/DARTS/Performance.Scripts/Data/sample.mp2&quot;

// Print the file path for debugging
log.info(&quot;File Path: &quot; + filePath)

try {
    // Read the audio file into a byte array
    byte[] fileData = FileUtils.readFileToByteArray(new File(filePath))

    // Convert the byte array to a binary string
    StringBuilder binaryStringBuilder = new StringBuilder()
    for (byte b : fileData) {
        binaryStringBuilder.append(String.format(&quot;%8s&quot;, Integer.toBinaryString(b &amp; 0xFF)).replace(&apos; &apos;, &apos;0&apos;))
    }

    // Log the binary string for debugging
    log.info(&quot;Binary representation of the audio file:\n&quot; + binaryStringBuilder.toString())

    // Set the binary string as a JMeter variable
    vars.put(&quot;binaryString&quot;, binaryStringBuilder.toString())


} catch (Exception e) {
    log.error(&quot;Error reading or converting the audio file: &quot; + e.getMessage())
    e.printStackTrace()
    // Handle the error as needed
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="false">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import org.apache.commons.io.FileUtils;
import java.util.Base64;

// Path to your audio file
String filePath = &quot;C:/Users/a.cooper/Desktop/Performance.Testing/DARTS/Performance.Scripts/Data/sample.mp2&quot;;

// Print the file path for debugging
log.info(&quot;File Path: &quot; + filePath);

try {
    // Read the audio file into a byte array
    byte[] fileData = FileUtils.readFileToByteArray(new File(filePath));

    // Encode the byte array to Base64
    String base64Encoded = Base64.getEncoder().encodeToString(fileData);

    // Save the Base64 encoded string to a JMeter variable
    vars.put(&quot;base64Encoded&quot;, base64Encoded);

    // Log the Base64 encoded string for debugging
    log.info(&quot;Base64 encoded representation of the audio file:\n&quot; + base64Encoded);

    // You can now use the variable ${base64Encoded} in your test logic

} catch (Exception e) {
    log.error(&quot;Error reading or encoding the audio file: &quot; + e.getMessage());
    e.printStackTrace();
    // Handle the error as needed
}
</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Darts - Gateway - Service - Add Audio - With Username" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${v_boundary}&#xd;
Content-Type: application/xop+xml; charset=UTF-8; type=&quot;text/xml&quot;&#xd;
Content-Transfer-Encoding: 8bit&#xd;
Content-ID: &lt;rootpart@soapui.org&gt;&#xd;
&#xd;
&lt;s:Envelope xmlns:s=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:com=&quot;http://com.synapps.mojdarts.service.com&quot; xmlns:core=&quot;http://core.datamodel.fs.documentum.emc.com/&quot; xmlns:prop=&quot;http://properties.core.datamodel.fs.documentum.emc.com/&quot; xmlns:con=&quot;http://content.core.datamodel.fs.documentum.emc.com/&quot;&gt;&#xd;
   &lt;s:Header&gt;&#xd;
      &lt;ServiceContext token=&quot;temporary/127.0.0.1-1694086218480-789961425&quot; xmlns=&quot;http://context.core.datamodel.fs.documentum.emc.com/&quot;&gt;&#xd;
         &lt;Identities xsi:type=&quot;RepositoryIdentity&quot; userName=&quot;xhibit_user&quot; password=&quot;Password@1&quot; repositoryName=&quot;moj_darts&quot; domain=&quot;&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
         &lt;RuntimeProperties/&gt;&#xd;
      &lt;/ServiceContext&gt;&#xd;
   &lt;/s:Header&gt;&#xd;
   &lt;s:Body&gt;&#xd;
      &lt;com:addAudio&gt;&#xd;
         &lt;document&gt;&amp;lt;audio&amp;gt;&amp;lt;start Y=&quot;2023&quot; M=&quot;9&quot; D=&quot;7&quot; H=&quot;11&quot; MIN=&quot;26&quot; S=&quot;51&quot; /&amp;gt;&amp;lt;end Y=&quot;2023&quot; M=&quot;9&quot; D=&quot;7&quot; H=&quot;11&quot; MIN=&quot;29&quot; S=&quot;49&quot; /&amp;gt;&amp;lt;channel&amp;gt;1&amp;lt;/channel&amp;gt;&amp;lt;max_channels&amp;gt;4&amp;lt;/max_channels&amp;gt;&amp;lt;mediaformat&amp;gt;mpeg2&amp;lt;/mediaformat&amp;gt;&amp;lt;mediafile&amp;gt;AshleyC101.mp2&amp;lt;/mediafile&amp;gt;&amp;lt;courthouse&amp;gt;SWANSEA&amp;lt;/courthouse&amp;gt;&amp;lt;courtroom&amp;gt;32&amp;lt;/courtroom&amp;gt;&amp;lt;case_numbers&amp;gt;&amp;lt;case_number&amp;gt;T20230294&amp;lt;/case_number&amp;gt;&amp;lt;case_number&amp;gt;U20230907-112949&amp;lt;/case_number&amp;gt;&amp;lt;/case_numbers&amp;gt;&amp;lt;/audio&amp;gt;&lt;/document&gt;&#xd;
      &lt;/com:addAudio&gt;&#xd;
   &lt;/s:Body&gt;&#xd;
&lt;/s:Envelope&gt;&#xd;
${v_boundary}&#xd;
Content-Type: application/octet-stream&#xd;
Content-Transfer-Encoding: binary&#xd;
Content-ID: &lt;AshleyC101.mp2&gt;&#xd;
Content-Disposition: attachment; name=&quot;AshleyC101.mp2&quot;&#xd;
&#xd;
${binaryString}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">darts-gateway.staging.platform.hmcts.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">service/darts/DARTSService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip,deflate</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">multipart/related; type=&quot;application/xop+xml&quot;; start=&quot;&lt;rootpart@soapui.org&gt;&quot;; start-info=&quot;text/xml&quot;;boundary=&quot;${v_boundary}&quot;;</stringProp>
              </elementProp>
              <elementProp name="SOAPAction" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;&quot;</stringProp>
              </elementProp>
              <elementProp name="MIME-Version" elementType="Header">
                <stringProp name="Header.name">MIME-Version</stringProp>
                <stringProp name="Header.value">1.0</stringProp>
              </elementProp>
              <elementProp name="Content-Length" elementType="Header">
                <stringProp name="Header.name">Content-Length</stringProp>
                <stringProp name="Header.value">5856160</stringProp>
              </elementProp>
              <elementProp name="Host" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">darts-gateway.staging.platform.hmcts.net</stringProp>
              </elementProp>
              <elementProp name="Connection" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">Keep-Alive</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.5 (Java/16.0.2)</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">0.0</stringProp>
            <stringProp name="ConstantTimer.delay">0.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Darts - Gateway - Service - Runtime - ContextRegistryService - AddDocument - With Username" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;s:Envelope xmlns:s=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;s:Header&gt;&#xd;
      &lt;ServiceContext token=&quot;temporary/127.0.0.1-1694086218480-789961425&quot; xmlns=&quot;http://context.core.datamodel.fs.documentum.emc.com/&quot;&gt;&#xd;
         &lt;Identities xsi:type=&quot;RepositoryIdentity&quot; userName=&quot;xhibit_user&quot; password=&quot;Password@1&quot; repositoryName=&quot;moj_darts&quot; domain=&quot;&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
         &lt;RuntimeProperties/&gt;&#xd;
      &lt;/ServiceContext&gt;&#xd;
   &lt;/s:Header&gt;&#xd;
   &lt;s:Body&gt;&#xd;
      &lt;ns5:addDocument xmlns:ns5=&quot;http://com.synapps.mojdarts.service.com&quot;&gt;&#xd;
         &lt;messageId&gt;18418&lt;/messageId&gt;&#xd;
         &lt;type&gt;DL&lt;/type&gt;&#xd;
         &lt;subType&gt;DL&lt;/subType&gt;&#xd;
         &lt;document&gt;&lt;![CDATA[&lt;cs:DailyList xmlns:cs=&quot;http://www.courtservice.gov.uk/schemas/courtservice&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.courtservice.gov.uk/schemas/courtservice DailyList-v5-2.xsd&quot; xmlns:apd=&quot;http://www.govtalk.gov.uk/people/AddressAndPersonalDetails&quot;&gt;&lt;cs:DocumentID&gt;&lt;cs:DocumentName&gt;DL 18/02/10 FINAL v1&lt;/cs:DocumentName&gt;&lt;cs:UniqueID&gt;CSDDL000000000576147&lt;/cs:UniqueID&gt;&lt;cs:DocumentType&gt;DL&lt;/cs:DocumentType&gt;&lt;cs:TimeStamp&gt;2010-02-18T11:13:23.030&lt;/cs:TimeStamp&gt;&lt;cs:Version&gt;1.0&lt;/cs:Version&gt;&lt;cs:SecurityClassification&gt;NPM&lt;/cs:SecurityClassification&gt;&lt;cs:SellByDate&gt;2010-12-15&lt;/cs:SellByDate&gt;&lt;cs:XSLstylesheetURL&gt;http://www.courtservice.gov.uk/transforms/courtservice/dailyListHtml.xsl&lt;/cs:XSLstylesheetURL&gt;&lt;/cs:DocumentID&gt;&lt;cs:ListHeader&gt;&lt;cs:ListCategory&gt;Criminal&lt;/cs:ListCategory&gt;&lt;cs:StartDate&gt;2010-02-18&lt;/cs:StartDate&gt;&lt;cs:EndDate&gt;2010-02-18&lt;/cs:EndDate&gt;&lt;cs:Version&gt;FINAL v1&lt;/cs:Version&gt;&lt;cs:CRESTprintRef&gt;MCD/112585&lt;/cs:CRESTprintRef&gt;&lt;cs:PublishedTime&gt;2010-02-17T16:16:50&lt;/cs:PublishedTime&gt;&lt;cs:CRESTlistID&gt;12298&lt;/cs:CRESTlistID&gt;&lt;/cs:ListHeader&gt;&lt;cs:CrownCourt&gt;&lt;cs:CourtHouseType&gt;Crown Court&lt;/cs:CourtHouseType&gt;&lt;cs:CourtHouseCode CourtHouseShortName=&quot;SNARE&quot;&gt;453&lt;/cs:CourtHouseCode&gt;&lt;cs:CourtHouseName&gt;Bristol&lt;/cs:CourtHouseName&gt;&lt;cs:CourtHouseAddress&gt;&lt;apd:Line&gt;THE CROWN COURT AT Bristol&lt;/apd:Line&gt;&lt;apd:Line&gt;75 HOLLYBUSH HILL&lt;/apd:Line&gt;&lt;apd:Line&gt;Bristol, LONDON&lt;/apd:Line&gt;&lt;apd:PostCode&gt;E11 1QW&lt;/apd:PostCode&gt;&lt;/cs:CourtHouseAddress&gt;&lt;cs:CourtHouseDX&gt;DX 98240 WANSTEAD 2&lt;/cs:CourtHouseDX&gt;&lt;cs:CourtHouseTelephone&gt;02085300000&lt;/cs:CourtHouseTelephone&gt;&lt;cs:CourtHouseFax&gt;02085300072&lt;/cs:CourtHouseFax&gt;&lt;/cs:CrownCourt&gt;&lt;cs:CourtLists&gt;&lt;cs:CourtList&gt;&lt;cs:CourtHouse&gt;&lt;cs:CourtHouseType&gt;Crown Court&lt;/cs:CourtHouseType&gt;&lt;cs:CourtHouseCode&gt;453&lt;/cs:CourtHouseCode&gt;&lt;cs:CourtHouseName&gt;Bristol&lt;/cs:CourtHouseName&gt;&lt;/cs:CourtHouse&gt;&lt;cs:Sittings&gt;&lt;cs:Sitting&gt;&lt;cs:CourtRoomNumber&gt;1AB&lt;/cs:CourtRoomNumber&gt;&lt;cs:SittingSequenceNo&gt;1&lt;/cs:SittingSequenceNo&gt;&lt;cs:SittingAt&gt;10:00:00&lt;/cs:SittingAt&gt;&lt;cs:SittingPriority&gt;T&lt;/cs:SittingPriority&gt;&lt;cs:Judiciary&gt;&lt;cs:Judge&gt;&lt;apd:CitizenNameSurname&gt;N&amp;#47;A&lt;/apd:CitizenNameSurname&gt;&lt;apd:CitizenNameRequestedName&gt;N&amp;#47;A&lt;/apd:CitizenNameRequestedName&gt;&lt;cs:CRESTjudgeID&gt;0&lt;/cs:CRESTjudgeID&gt;&lt;/cs:Judge&gt;&lt;/cs:Judiciary&gt;&lt;cs:Hearings&gt;&lt;cs:Hearing&gt;&lt;cs:HearingSequenceNumber&gt;1&lt;/cs:HearingSequenceNumber&gt;&lt;cs:HearingDetails HearingType=&quot;TRL&quot;&gt;&lt;cs:HearingDescription&gt;For Trial&lt;/cs:HearingDescription&gt;&lt;cs:HearingDate&gt;2010-02-18&lt;/cs:HearingDate&gt;&lt;/cs:HearingDetails&gt;&lt;cs:CRESThearingID&gt;1&lt;/cs:CRESThearingID&gt;&lt;cs:TimeMarkingNote&gt;10:00 AM&lt;/cs:TimeMarkingNote&gt;&lt;cs:CaseNumber&gt;T20107001&lt;/cs:CaseNumber&gt;&lt;cs:Prosecution ProsecutingAuthority=&quot;Crown Prosecution Service&quot;&gt;&lt;cs:ProsecutingReference&gt;CPS&lt;/cs:ProsecutingReference&gt;&lt;cs:ProsecutingOrganisation&gt;&lt;cs:OrganisationName&gt;Crown Prosecution Service&lt;/cs:OrganisationName&gt;&lt;/cs:ProsecutingOrganisation&gt;&lt;/cs:Prosecution&gt;&lt;cs:CommittingCourt&gt;&lt;cs:CourtHouseType&gt;Magistrates Court&lt;/cs:CourtHouseType&gt;&lt;cs:CourtHouseCode CourtHouseShortName=&quot;BAM&quot;&gt;2725&lt;/cs:CourtHouseCode&gt;&lt;cs:CourtHouseName&gt;BARNET MAGISTRATES COURT&lt;/cs:CourtHouseName&gt;&lt;cs:CourtHouseAddress&gt;&lt;apd:Line&gt;7C HIGH STREET&lt;/apd:Line&gt;&lt;apd:Line&gt;-&lt;/apd:Line&gt;&lt;apd:Line&gt;BARNET&lt;/apd:Line&gt;&lt;apd:PostCode&gt;EN5 5UE&lt;/apd:PostCode&gt;&lt;/cs:CourtHouseAddress&gt;&lt;cs:CourtHouseDX&gt;DX 8626 BARNET&lt;/cs:CourtHouseDX&gt;&lt;cs:CourtHouseTelephone&gt;02084419042&lt;/cs:CourtHouseTelephone&gt;&lt;/cs:CommittingCourt&gt;&lt;cs:Defendants&gt;&lt;cs:Defendant&gt;&lt;cs:PersonalDetails&gt;&lt;cs:Name&gt;&lt;apd:CitizenNameForename&gt;Franz&lt;/apd:CitizenNameForename&gt;&lt;apd:CitizenNameSurname&gt;KAFKA&lt;/apd:CitizenNameSurname&gt;&lt;/cs:Name&gt;&lt;cs:IsMasked&gt;no&lt;/cs:IsMasked&gt;&lt;cs:DateOfBirth&gt;&lt;apd:BirthDate&gt;1962-06-12&lt;/apd:BirthDate&gt;&lt;apd:VerifiedBy&gt;not verified&lt;/apd:VerifiedBy&gt;&lt;/cs:DateOfBirth&gt;&lt;cs:Sex&gt;male&lt;/cs:Sex&gt;&lt;cs:Address&gt;&lt;apd:Line&gt;ADDRESS LINE 1&lt;/apd:Line&gt;&lt;apd:Line&gt;ADDRESS LINE 2&lt;/apd:Line&gt;&lt;apd:Line&gt;ADDRESS LINE 3&lt;/apd:Line&gt;&lt;apd:Line&gt;ADDRESS LINE 4&lt;/apd:Line&gt;&lt;apd:Line&gt;SOMETOWN, SOMECOUNTY&lt;/apd:Line&gt;&lt;apd:PostCode&gt;GU12 7RT&lt;/apd:PostCode&gt;&lt;/cs:Address&gt;&lt;/cs:PersonalDetails&gt;&lt;cs:ASNs&gt;&lt;cs:ASN&gt;0723XH1000000262665K&lt;/cs:ASN&gt;&lt;/cs:ASNs&gt;&lt;cs:CRESTdefendantID&gt;29161&lt;/cs:CRESTdefendantID&gt;&lt;cs:PNCnumber&gt;20123456789L&lt;/cs:PNCnumber&gt;&lt;cs:URN&gt;62AA1010646&lt;/cs:URN&gt;&lt;cs:CustodyStatus&gt;In custody&lt;/cs:CustodyStatus&gt;&lt;/cs:Defendant&gt;&lt;/cs:Defendants&gt;&lt;/cs:Hearing&gt;&lt;/cs:Hearings&gt;&lt;/cs:Sitting&gt;&lt;/cs:Sittings&gt;&lt;/cs:CourtList&gt;&lt;/cs:CourtLists&gt;&lt;/cs:DailyList&gt;]]&gt;&lt;/document&gt;&#xd;
      &lt;/ns5:addDocument&gt;&#xd;
   &lt;/s:Body&gt;&#xd;
&lt;/s:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">darts-gateway.staging.platform.hmcts.net</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">service/darts/runtime/ContextRegistryService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip,deflate</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="SOAPAction" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Length" elementType="Header">
                <stringProp name="Header.name">Content-Length</stringProp>
                <stringProp name="Header.value">5082</stringProp>
              </elementProp>
              <elementProp name="Host" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">darts-gateway.staging.platform.hmcts.net</stringProp>
              </elementProp>
              <elementProp name="Connection" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">Keep-Alive</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Apache-HttpClient/4.5.5 (Java/16.0.2)</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="RandomTimer.range">0.0</stringProp>
            <stringProp name="ConstantTimer.delay">0.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
